diff --git a/simple-login-ui-master/.gitignore b/simple-login-ui-master/.gitignore
new file mode 100644
index 0000000..aa724b7
--- /dev/null
+++ b/simple-login-ui-master/.gitignore
@@ -0,0 +1,15 @@
+*.iml
+.gradle
+/local.properties
+/.idea/caches
+/.idea/libraries
+/.idea/modules.xml
+/.idea/workspace.xml
+/.idea/navEditor.xml
+/.idea/assetWizardSettings.xml
+.DS_Store
+/build
+/captures
+.externalNativeBuild
+.cxx
+local.properties
diff --git a/simple-login-ui-master/.idea/.gitignore b/simple-login-ui-master/.idea/.gitignore
new file mode 100644
index 0000000..26d3352
--- /dev/null
+++ b/simple-login-ui-master/.idea/.gitignore
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
diff --git a/simple-login-ui-master/.idea/.name b/simple-login-ui-master/.idea/.name
new file mode 100644
index 0000000..fa37319
--- /dev/null
+++ b/simple-login-ui-master/.idea/.name
@@ -0,0 +1 @@
+LoginApplication
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/codeStyles/Project.xml b/simple-login-ui-master/.idea/codeStyles/Project.xml
new file mode 100644
index 0000000..3c7772a
--- /dev/null
+++ b/simple-login-ui-master/.idea/codeStyles/Project.xml
@@ -0,0 +1,139 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <JetCodeStyleSettings>
+      <option name="PACKAGES_TO_USE_STAR_IMPORTS">
+        <value>
+          <package name="java.util" alias="false" withSubpackages="false" />
+          <package name="kotlinx.android.synthetic" alias="false" withSubpackages="true" />
+          <package name="io.ktor" alias="false" withSubpackages="true" />
+        </value>
+      </option>
+      <option name="PACKAGES_IMPORT_LAYOUT">
+        <value>
+          <package name="" alias="false" withSubpackages="true" />
+          <package name="java" alias="false" withSubpackages="true" />
+          <package name="javax" alias="false" withSubpackages="true" />
+          <package name="kotlin" alias="false" withSubpackages="true" />
+          <package name="" alias="true" withSubpackages="true" />
+        </value>
+      </option>
+      <option name="CODE_STYLE_DEFAULTS" value="KOTLIN_OFFICIAL" />
+    </JetCodeStyleSettings>
+    <codeStyleSettings language="XML">
+      <option name="FORCE_REARRANGE_MODE" value="1" />
+      <indentOptions>
+        <option name="CONTINUATION_INDENT_SIZE" value="4" />
+      </indentOptions>
+      <arrangement>
+        <rules>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>xmlns:android</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>xmlns:.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*:id</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*:name</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>name</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>style</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>ANDROID_ATTRIBUTE_ORDER</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>.*</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+        </rules>
+      </arrangement>
+    </codeStyleSettings>
+    <codeStyleSettings language="kotlin">
+      <option name="CODE_STYLE_DEFAULTS" value="KOTLIN_OFFICIAL" />
+    </codeStyleSettings>
+  </code_scheme>
+</component>
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/codeStyles/codeStyleConfig.xml b/simple-login-ui-master/.idea/codeStyles/codeStyleConfig.xml
new file mode 100644
index 0000000..79ee123
--- /dev/null
+++ b/simple-login-ui-master/.idea/codeStyles/codeStyleConfig.xml
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
+  </state>
+</component>
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/compiler.xml b/simple-login-ui-master/.idea/compiler.xml
new file mode 100644
index 0000000..fb7f4a8
--- /dev/null
+++ b/simple-login-ui-master/.idea/compiler.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="11" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/deploymentTargetDropDown.xml b/simple-login-ui-master/.idea/deploymentTargetDropDown.xml
new file mode 100644
index 0000000..a6317ad
--- /dev/null
+++ b/simple-login-ui-master/.idea/deploymentTargetDropDown.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="deploymentTargetDropDown">
+    <runningDeviceTargetSelectedWithDropDown>
+      <Target>
+        <type value="RUNNING_DEVICE_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="SERIAL_NUMBER" />
+            <value value="R3CM90352BZ" />
+          </Key>
+        </deviceKey>
+      </Target>
+    </runningDeviceTargetSelectedWithDropDown>
+    <timeTargetWasSelectedWithDropDown value="2022-08-17T13:47:42.000753700Z" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/gradle.xml b/simple-login-ui-master/.idea/gradle.xml
new file mode 100644
index 0000000..a2d7c21
--- /dev/null
+++ b/simple-login-ui-master/.idea/gradle.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="testRunner" value="GRADLE" />
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/inspectionProfiles/Project_Default.xml b/simple-login-ui-master/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
index 0000000..2842237
--- /dev/null
+++ b/simple-login-ui-master/.idea/inspectionProfiles/Project_Default.xml
@@ -0,0 +1,20 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PreviewAnnotationInFunctionWithParameters" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="PreviewDimensionRespectsLimit" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="PreviewMultipleParameterProviders" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="PreviewMustBeTopLevelFunction" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+    <inspection_tool class="PreviewNeedsComposableAnnotation" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="previewFile" value="true" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/jarRepositories.xml b/simple-login-ui-master/.idea/jarRepositories.xml
new file mode 100644
index 0000000..a5f05cd
--- /dev/null
+++ b/simple-login-ui-master/.idea/jarRepositories.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="BintrayJCenter" />
+      <option name="name" value="BintrayJCenter" />
+      <option name="url" value="https://jcenter.bintray.com/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="Google" />
+      <option name="name" value="Google" />
+      <option name="url" value="https://dl.google.com/dl/android/maven2/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/misc.xml b/simple-login-ui-master/.idea/misc.xml
new file mode 100644
index 0000000..54d5acd
--- /dev/null
+++ b/simple-login-ui-master/.idea/misc.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/simple-login-ui-master/.idea/vcs.xml b/simple-login-ui-master/.idea/vcs.xml
new file mode 100644
index 0000000..288b36b
--- /dev/null
+++ b/simple-login-ui-master/.idea/vcs.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/simple-login-ui-master/README.md b/simple-login-ui-master/README.md
new file mode 100644
index 0000000..e45a371
--- /dev/null
+++ b/simple-login-ui-master/README.md
@@ -0,0 +1,10 @@
+# SIMPLE LOGIN UI - JETPACK COMPOSE
+## A Simple Android Login UI Application using Jetpack Compose
+
+## LIBRARIES
+
+### Compose Navigation Library - [Jetpack Compose Navigation](https://developer.android.com/jetpack/compose/navigation)
+
+## SCREENSHOTS
+![Login Page](screenshots/login.jpg)    ![Register Page](screenshots/register.jpg)
+
diff --git a/simple-login-ui-master/app/.gitignore b/simple-login-ui-master/app/.gitignore
new file mode 100644
index 0000000..42afabf
--- /dev/null
+++ b/simple-login-ui-master/app/.gitignore
@@ -0,0 +1 @@
+/build
\ No newline at end of file
diff --git a/simple-login-ui-master/app/build.gradle b/simple-login-ui-master/app/build.gradle
new file mode 100644
index 0000000..8a0df45
--- /dev/null
+++ b/simple-login-ui-master/app/build.gradle
@@ -0,0 +1,59 @@
+plugins {
+    id 'com.android.application'
+    id 'kotlin-android'
+}
+
+android {
+    compileSdkVersion 31
+    buildToolsVersion "30.0.3"
+
+    defaultConfig {
+        applicationId "com.learnandroid.loginapplication"
+        minSdkVersion 24
+        targetSdkVersion 31
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+    kotlinOptions {
+        jvmTarget = '1.8'
+//        useIR = true
+    }
+    buildFeatures {
+        compose true
+    }
+    composeOptions {
+        kotlinCompilerExtensionVersion "1.3.0"
+        kotlinCompilerVersion '1.7.10'
+    }
+}
+
+dependencies {
+    implementation 'androidx.core:core-ktx:1.7.0'
+    implementation 'androidx.appcompat:appcompat:1.3.0'
+    implementation 'com.google.android.material:material:1.4.0'
+    implementation "androidx.compose.ui:ui:$compose_version"
+    implementation "androidx.compose.material:material:$compose_version"
+    implementation "androidx.compose.ui:ui-tooling:$compose_version"
+    implementation 'androidx.lifecycle:lifecycle-runtime:2.4.0'
+    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
+    implementation 'androidx.activity:activity-compose:1.4.0'
+    testImplementation 'junit:junit:4.13.2'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
+
+    //Compose Navigation Dependency
+    implementation("androidx.navigation:navigation-compose:2.4.0-beta02")
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/app/proguard-rules.pro b/simple-login-ui-master/app/proguard-rules.pro
new file mode 100644
index 0000000..481bb43
--- /dev/null
+++ b/simple-login-ui-master/app/proguard-rules.pro
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/androidTest/java/com/learnandroid/loginapplication/ExampleInstrumentedTest.kt b/simple-login-ui-master/app/src/androidTest/java/com/learnandroid/loginapplication/ExampleInstrumentedTest.kt
new file mode 100644
index 0000000..23b8722
--- /dev/null
+++ b/simple-login-ui-master/app/src/androidTest/java/com/learnandroid/loginapplication/ExampleInstrumentedTest.kt
@@ -0,0 +1,24 @@
+package com.learnandroid.loginapplication
+
+import androidx.test.platform.app.InstrumentationRegistry
+import androidx.test.ext.junit.runners.AndroidJUnit4
+
+import org.junit.Test
+import org.junit.runner.RunWith
+
+import org.junit.Assert.*
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+@RunWith(AndroidJUnit4::class)
+class ExampleInstrumentedTest {
+    @Test
+    fun useAppContext() {
+        // Context of the app under test.
+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext
+        assertEquals("com.learnandroid.loginapplication", appContext.packageName)
+    }
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/AndroidManifest.xml b/simple-login-ui-master/app/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..b978dc0
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/AndroidManifest.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.learnandroid.loginapplication">
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/Theme.LoginApplication">
+        <activity
+            android:name=".MainActivity"
+            android:label="@string/app_name"
+            android:exported="true"
+            android:theme="@style/Theme.LoginApplication.NoActionBar">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/MainActivity.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/MainActivity.kt
new file mode 100644
index 0000000..ea8f192
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/MainActivity.kt
@@ -0,0 +1,67 @@
+package com.learnandroid.loginapplication
+
+import android.os.Bundle
+import android.view.WindowManager
+import androidx.activity.viewModels
+import androidx.appcompat.app.AppCompatActivity
+import androidx.compose.runtime.Composable
+import androidx.activity.compose.setContent
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import androidx.navigation.compose.rememberNavController
+import com.learnandroid.loginapplication.composables.*
+import com.learnandroid.loginapplication.ui.theme.LoginApplicationTheme
+
+class MainActivity : AppCompatActivity() {
+    private val mainViewModel: MainViewModel by viewModels()
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        window.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE)
+        setContent {
+            LoginApplicationTheme {
+                LoginApplication(mainViewModel = mainViewModel)
+            }
+        }
+    }
+
+    @Composable
+    fun LoginApplication(mainViewModel: MainViewModel){
+        val navController = rememberNavController()
+
+        NavHost(navController = navController, startDestination = "login_page", builder = {
+            composable("login_page", content = { LoginPage(navController = navController) })
+            composable("register_page", content = { RegisterPage(navController = navController) })
+            composable("main_page", content = { MainPage(
+                navController = navController
+            ) })
+
+            composable("job_search_info_page", content = { JobSearchInfo(navController = navController
+                , mainViewModel = mainViewModel) })
+            composable("community_page", content = { CommunityPage(navController = navController) })
+            composable("mypage_page", content = { MyPage(navController = navController) })
+        })
+    }
+}
+//
+//class MyViewmodel : ViewModel() {
+//    // state
+//    var text by
+//
+//
+//
+//    mutableStateOf("")
+//    var password by mutableStateOf("")
+//
+//    // events
+//    fun onTextChanged(newString:String) {
+//        text = newString
+//    }
+//
+//    fun onPasswordChanged(newString:String) {
+//        password = newString
+//    }
+//
+//}
+
+
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/MainViewModel.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/MainViewModel.kt
new file mode 100644
index 0000000..a3e5ace
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/MainViewModel.kt
@@ -0,0 +1,24 @@
+package com.learnandroid.loginapplication
+
+import androidx.compose.runtime.MutableState
+import androidx.compose.runtime.State
+import androidx.compose.runtime.mutableStateOf
+import androidx.lifecycle.ViewModel
+
+class MainViewModel : ViewModel() {
+    private val _searchWidgetState: MutableState<SearchWidgetState> =
+        mutableStateOf(value = SearchWidgetState.CLOSED)
+    val searchWidgetState: State<SearchWidgetState> = _searchWidgetState
+
+    private val _searchTextState: MutableState<String> =
+        mutableStateOf(value = "")
+    val searchTextState: State<String> = _searchTextState
+
+    fun updateSearchWidgetState(newValue: SearchWidgetState) {
+        _searchWidgetState.value = newValue
+    }
+
+    fun updateSearchTextState(newValue: String) {
+        _searchTextState.value = newValue
+    }
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/SearchWidgetState.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/SearchWidgetState.kt
new file mode 100644
index 0000000..50bd8ef
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/SearchWidgetState.kt
@@ -0,0 +1,6 @@
+package com.learnandroid.loginapplication
+
+enum class SearchWidgetState {
+    OPENED,
+    CLOSED
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/CommunityPage.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/CommunityPage.kt
new file mode 100644
index 0000000..4a55ab9
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/CommunityPage.kt
@@ -0,0 +1,20 @@
+package com.learnandroid.loginapplication.composables
+
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.navigation.NavController
+
+@Composable
+fun CommunityPage(navController: NavController) {
+
+    Box(modifier = Modifier.fillMaxSize()) {
+        Box() {
+
+        }
+    }
+
+
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/JobSearchInfo.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/JobSearchInfo.kt
new file mode 100644
index 0000000..f981ae8
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/JobSearchInfo.kt
@@ -0,0 +1,194 @@
+package com.learnandroid.loginapplication.composables
+
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.text.KeyboardOptions
+import androidx.compose.material.*
+import androidx.compose.material.icons.Icons
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.alpha
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.input.ImeAction
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.navigation.NavController
+import androidx.navigation.compose.rememberNavController
+import com.learnandroid.loginapplication.ui.theme.whiteBackground
+import android.util.Log
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.text.KeyboardActions
+import androidx.compose.material.icons.filled.Close
+import androidx.compose.material.icons.filled.Search
+import androidx.compose.runtime.getValue
+import com.learnandroid.loginapplication.MainViewModel
+import com.learnandroid.loginapplication.SearchWidgetState
+
+@Composable
+fun JobSearchInfo(mainViewModel: MainViewModel, navController: NavController)  {
+
+    val searchWidgetState by mainViewModel.searchWidgetState
+    val searchTextState by mainViewModel.searchTextState
+    Box(
+        modifier = Modifier
+            .fillMaxSize()
+            .background(whiteBackground),
+    ) {
+        Column() {
+            // Row()
+            // 검색: jetpack compose search bar
+            Text(text = "123")
+        }
+    }
+
+}
+
+@Composable
+fun MainAppBar(
+    searchWidgetState: SearchWidgetState,
+    searchTextState: String,
+    onTextChange: (String) -> Unit,
+    onCloseClicked: () -> Unit,
+    onSearchClicked: (String) -> Unit,
+    onSearchTriggered: () -> Unit
+) {
+    when (searchWidgetState) {
+        SearchWidgetState.CLOSED -> {
+            DefaultAppBar(
+                onSearchClicked = onSearchTriggered
+            )
+        }
+        SearchWidgetState.OPENED -> {
+            SearchAppBar(
+                text = searchTextState,
+                onTextChange = onTextChange,
+                onCloseClicked = onCloseClicked,
+                onSearchClicked = onSearchClicked
+            )
+        }
+    }
+}
+
+@Composable
+fun DefaultAppBar(onSearchClicked: () -> Unit) {
+    TopAppBar(
+        title = {
+            Text(
+                text = "Home"
+            )
+        },
+        actions = {
+            IconButton(
+                onClick = { onSearchClicked() }
+            ) {
+                Icon(
+                    imageVector = Icons.Filled.Search,
+                    contentDescription = "Search Icon",
+                    tint = Color.White
+                )
+            }
+        }
+    )
+}
+
+@Composable
+fun SearchAppBar(
+    text: String,
+    onTextChange: (String) -> Unit,
+    onCloseClicked: () -> Unit,
+    onSearchClicked: (String) -> Unit,
+) {
+    Surface(
+        modifier = Modifier
+            .fillMaxWidth()
+            .height(56.dp),
+        elevation = AppBarDefaults.TopAppBarElevation,
+        color = MaterialTheme.colors.primary
+    ) {
+        TextField(modifier = Modifier
+            .fillMaxWidth(),
+            value = text,
+            onValueChange = {
+                onTextChange(it)
+            },
+            placeholder = {
+                Text(
+                    modifier = Modifier
+                        .alpha(ContentAlpha.medium),
+                    text = "Search here...",
+                    color = Color.White
+                )
+            },
+            textStyle = TextStyle(
+                fontSize = MaterialTheme.typography.subtitle1.fontSize
+            ),
+            singleLine = true,
+            leadingIcon = {
+                IconButton(
+                    modifier = Modifier
+                        .alpha(ContentAlpha.medium),
+                    onClick = {}
+                ) {
+                    Icon(
+                        imageVector = Icons.Default.Search,
+                        contentDescription = "Search Icon",
+                        tint = Color.White
+                    )
+                }
+            },
+            trailingIcon = {
+                IconButton(
+                    onClick = {
+                        if (text.isNotEmpty()) {
+                            onTextChange("")
+                        } else {
+                            onCloseClicked()
+                        }
+                    }
+                ) {
+                    Icon(
+                        imageVector = Icons.Default.Close,
+                        contentDescription = "Close Icon",
+                        tint = Color.White
+                    )
+                }
+            },
+            keyboardOptions = KeyboardOptions(
+                imeAction = ImeAction.Search
+            ),
+            keyboardActions = KeyboardActions(
+                onSearch = {
+                    onSearchClicked(text)
+                }
+            ),
+            colors = TextFieldDefaults.textFieldColors(
+                backgroundColor = Color.Transparent,
+                cursorColor = Color.White.copy(alpha = ContentAlpha.medium)
+            ))
+    }
+}
+
+//@Preview
+//@Composable
+//fun JobSearchInfoPreview() {
+//    JobSearchInfo(mainViewModel = , rememberNavController());
+//}
+
+@Composable
+@Preview
+fun DefaultAppBarPreview() {
+    DefaultAppBar(onSearchClicked = {})
+}
+
+@Composable
+@Preview
+fun SearchAppBarPreview() {
+    SearchAppBar(
+        text = "Some random text",
+        onTextChange = {},
+        onCloseClicked = {},
+        onSearchClicked = {}
+    )
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/LoginPage.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/LoginPage.kt
new file mode 100644
index 0000000..ce76f2f
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/LoginPage.kt
@@ -0,0 +1,175 @@
+package com.learnandroid.loginapplication.composables
+
+import android.util.Log
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.foundation.text.KeyboardActions
+import androidx.compose.material.*
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.rounded.Clear
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.focus.FocusRequester
+import androidx.compose.ui.focus.focusRequester
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.ImageBitmap
+import androidx.compose.ui.graphics.vector.ImageVector
+import androidx.compose.ui.platform.LocalFocusManager
+import androidx.compose.ui.res.imageResource
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.res.vectorResource
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.text.input.PasswordVisualTransformation
+import androidx.compose.ui.text.input.VisualTransformation
+import androidx.compose.ui.unit.TextUnit
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.navigation.NavController
+import com.learnandroid.loginapplication.R
+import com.learnandroid.loginapplication.ui.theme.primaryColor
+import com.learnandroid.loginapplication.ui.theme.whiteBackground
+
+@Composable
+fun LoginPage(navController: NavController) {
+//    val image = ImageBitmap.imageResource(id = R.drawable.login_image)
+
+    val emailValue = remember { mutableStateOf("") }
+    val passwordValue = remember { mutableStateOf("") }
+
+    val passwordVisibility = remember { mutableStateOf(false) }
+    val focusRequester = remember { FocusRequester() }
+
+    val focusManager = LocalFocusManager.current
+
+    Box(
+        modifier = Modifier
+            .fillMaxSize(),
+        contentAlignment = Alignment.BottomCenter
+    ) {
+        Box(
+            modifier = Modifier
+                .fillMaxSize()
+                .background(Color.White), contentAlignment = Alignment.TopCenter
+        ) {
+            Image(
+                painterResource(id = R.drawable.login_image),
+                contentDescription = "",
+            )
+        }
+
+        Column(
+            horizontalAlignment = Alignment.CenterHorizontally,
+            verticalArrangement = Arrangement.Center,
+            modifier = Modifier
+                .fillMaxWidth()
+                .fillMaxHeight(0.60f)
+                .clip(RoundedCornerShape(30.dp))
+                .background(whiteBackground)
+                .padding(10.dp)
+        ) {
+
+            Column(horizontalAlignment = Alignment.CenterHorizontally) {
+                Text(
+                    text = "로그인",
+                    style = TextStyle(
+                        fontWeight = FontWeight.Bold,
+                        letterSpacing = 2.sp
+                    ),
+                    fontSize = 30.sp,
+                )
+                Spacer(modifier = Modifier.padding(20.dp))
+                Column(horizontalAlignment = Alignment.CenterHorizontally) {
+                    OutlinedTextField(
+                        value = emailValue.value,
+                        onValueChange = { emailValue.value = it },
+                        label = { Text(text = "Email Address") },
+                        placeholder = { Text(text = "Email Address") },
+                        singleLine = true,
+                        modifier = Modifier.fillMaxWidth(0.8f),
+                        // onImeActionPerformed is deprecated
+//                        onImeActionPerformed = { _, _ ->
+//                            focusRequester.requestFocus()
+//                        }
+                        keyboardActions = KeyboardActions(onDone = { focusManager.clearFocus() }),
+                    )
+
+                    OutlinedTextField(
+                        value = passwordValue.value,
+                        onValueChange = { passwordValue.value = it },
+                        trailingIcon = {
+                            IconButton(onClick = {
+                                passwordVisibility.value = !passwordVisibility.value
+                            }) {
+                                Icon(
+                                    imageVector = Icons.Rounded.Clear,
+//                                    ImageBitmap = ImageBitmap
+//                                        .imageResource(id = R.drawable.password_eye),
+                                    contentDescription = "Clear"
+                                    // vectorResource deprecated
+//                                    imageVector = ImageVector.vectorResource(id = R.drawable.password_eye),
+//                                    tint = if (passwordVisibility.value) primaryColor else Color.Gray
+                                )
+                            }
+                        },
+                        label = { Text("Password") },
+                        placeholder = { Text(text = "Password") },
+                        singleLine = true,
+                        visualTransformation = if (passwordVisibility.value) VisualTransformation.None
+                        else PasswordVisualTransformation(),
+                        modifier = Modifier
+                            .fillMaxWidth(0.8f)
+                            .focusRequester(focusRequester = focusRequester),
+//                        onImeActionPerformed = { _, controller ->
+//                            controller?.hideSoftwareKeyboard()
+//                        }
+                        keyboardActions = KeyboardActions(onDone = { focusManager.clearFocus() }),
+                    )
+
+                    Spacer(modifier = Modifier.padding(10.dp))
+                    Button(
+                        // 내가 추가한 부분
+                        onClick = {
+                            navController.navigate("main_page")
+//                            if (passwordValue.value == "1234" &&
+//                                    emailValue.value == "12.com") {
+//                                navController.navigate("main_page") {
+//                                    popUpTo = navController.graph.startDestination
+//                                    launchSingleTop = true
+//                                }
+//                            }
+                            Log.d("OLIVER486", "value : " + passwordValue.value);
+                            Log.d("OLIVER486", "value : " + emailValue.value);
+                        },
+                        shape = RoundedCornerShape(25),
+                        modifier = Modifier
+                            .fillMaxWidth(0.8f)
+                            .height(50.dp)
+                    ) {
+                        Text(text = "로그인", fontSize = 20.sp)
+                    }
+
+                    Spacer(modifier = Modifier.padding(20.dp))
+                    Text(
+                        text = "계정 생성",
+                        modifier = Modifier.clickable(onClick = {
+                            navController.navigate("register_page"){
+                            }
+                        })
+                    )
+                    Spacer(modifier = Modifier.padding(20.dp))
+                }
+            }
+        }
+    }
+}
+
+
+
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/MainPage.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/MainPage.kt
new file mode 100644
index 0000000..c83a609
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/MainPage.kt
@@ -0,0 +1,123 @@
+package com.learnandroid.loginapplication.composables
+
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material.*
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.focus.FocusRequester
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.navigation.NavController
+import com.learnandroid.loginapplication.MainViewModel
+import com.learnandroid.loginapplication.ui.theme.whiteBackground
+
+@Composable
+fun MainPage(navController: NavController) {
+//    val image = imageResource(id = R.drawable.login_image)
+
+
+    val emailValue = remember { mutableStateOf("") }
+    val passwordValue = remember { mutableStateOf("") }
+
+    val passwordVisibility = remember { mutableStateOf(false) }
+    val focusRequester = remember { FocusRequester() }
+
+    Box(
+        modifier = Modifier
+            .fillMaxSize()
+            .background(whiteBackground),
+        contentAlignment = Alignment.Center
+    ) {
+        Column (
+            horizontalAlignment = Alignment.CenterHorizontally,
+            verticalArrangement = Arrangement.Center,
+            modifier = Modifier
+                .fillMaxWidth()
+                .fillMaxHeight()
+                .clip(RoundedCornerShape(30.dp))
+        ) {
+            Column(
+                horizontalAlignment = Alignment.CenterHorizontally,
+                verticalArrangement = Arrangement.Center,
+                modifier = Modifier
+                    .fillMaxHeight(0.90f),
+            ) {
+                Text(
+                    modifier = Modifier
+                        .fillMaxWidth(0.80f)
+                        .height(50.dp),
+                    text = "홍길동님 안녕하세요.",
+                    color = Color.Black,
+                    fontSize = 30.sp,
+                    fontWeight = FontWeight.Bold,
+                )
+                // Box Column Text Spacer button
+                Button(
+                    onClick = {
+                        navController.navigate("mypage_page")
+                    },
+                    modifier = Modifier
+                        .wrapContentSize()
+                        .fillMaxWidth(0.80f)
+                        .height(100.dp),
+                    shape = RoundedCornerShape(25),
+                ) {
+                    Text(
+                        text = "마이페이지",
+                        modifier = Modifier.fillMaxWidth(),
+                        color = Color.White,
+                        textAlign = TextAlign.Left,
+                        fontSize = 30.sp,
+                    )
+                }
+                Spacer(modifier = Modifier.padding(20.dp))
+                Button(
+                    onClick = {
+                        navController.navigate("community_page")
+                    },
+                    modifier = Modifier
+                        .wrapContentSize()
+                        .fillMaxWidth(0.80f)
+                        .height(100.dp),
+                    shape = RoundedCornerShape(25),
+                ) {
+                    Text(
+                        text = "커뮤니티",
+                        modifier = Modifier.fillMaxWidth(),
+                        color = Color.White,
+                        textAlign = TextAlign.Left,
+                        fontSize = 30.sp,
+                    )
+                }
+                Spacer(modifier = Modifier.padding(20.dp))
+                Button(
+                    onClick = {
+                        navController.navigate("job_search_info_page")
+                    },
+                    modifier = Modifier
+                        .wrapContentSize()
+                        .fillMaxWidth(0.80f)
+                        .height(100.dp),
+                    shape = RoundedCornerShape(25),
+                ) {
+                    Text(
+                        text = "구직정보",
+                        modifier = Modifier.fillMaxWidth(),
+                        color = Color.White,
+                        textAlign = TextAlign.Left,
+                        fontSize = 30.sp,
+                    )
+                }
+            }
+        }
+    }
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/MyPage.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/MyPage.kt
new file mode 100644
index 0000000..837fbb4
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/MyPage.kt
@@ -0,0 +1,67 @@
+package com.learnandroid.loginapplication.composables
+
+import android.util.Log
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.*
+import androidx.compose.material.Button
+import androidx.compose.material.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.unit.TextUnit
+import androidx.compose.ui.unit.sp
+import androidx.navigation.NavController
+import com.learnandroid.loginapplication.ui.theme.whiteBackground
+
+@Composable
+fun MyPage (navController: NavController) {
+
+    Box(
+        modifier = Modifier
+            .fillMaxSize()
+            .background(whiteBackground),
+    ) {
+        Column() {
+            Text(text = "홍길동님 안녕하세요.")
+            Column() {
+                Button(
+                    onClick = {},
+                ) {
+                    Text(text = "정보 설정", fontSize = 20.sp)
+                }
+                Button(
+                    onClick = {},
+                ) {
+                    Text(text = "자격증 검색", fontSize = 20.sp)
+                }
+            }
+            Text(text = "취득 자격증 목록")
+            Column() {
+                Row() {
+                    Text(text = "2012년 2월 18일")
+                    Text(text = "정보처리기사")
+                }
+            }
+
+            Text(text = "관심 자격증 목록")
+            Column() {
+                Row() {
+                    Text(text = "산업안전기사")
+                }
+            }
+            
+        }
+//        Text(text = "mypage")
+    }
+
+//    BackHandler(enabled = true) {
+//        Log.d("OLIVER486", "popBackStack");
+//        navController.navigate("main_page")
+//    }
+}
+
+//@Composable
+//fun BackHandler(enabled: Boolean, onBack: () -> Unit) {
+//
+//}
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/RegisterPage.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/RegisterPage.kt
new file mode 100644
index 0000000..fefa393
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/composables/RegisterPage.kt
@@ -0,0 +1,194 @@
+package com.learnandroid.loginapplication.composables
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.foundation.text.KeyboardOptions
+import androidx.compose.material.*
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.rounded.Clear
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.vector.ImageVector
+import androidx.compose.ui.res.imageResource
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.res.vectorResource
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.text.input.KeyboardType
+import androidx.compose.ui.text.input.PasswordVisualTransformation
+import androidx.compose.ui.text.input.VisualTransformation
+import androidx.compose.ui.unit.TextUnit
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.navigation.NavController
+import com.learnandroid.loginapplication.R
+import com.learnandroid.loginapplication.ui.theme.primaryColor
+import com.learnandroid.loginapplication.ui.theme.whiteBackground
+
+@Composable
+fun RegisterPage(navController: NavController) {
+
+//    val image = imageResource(id = R.drawable.register_page)
+
+    val nameValue = remember { mutableStateOf("") }
+    val emailValue = remember { mutableStateOf("") }
+    val phoneValue = remember { mutableStateOf("") }
+    val passwordValue = remember { mutableStateOf("") }
+    val confirmPasswordValue = remember { mutableStateOf("") }
+
+    val passwordVisibility = remember { mutableStateOf(false) }
+    val confirmPasswordVisibility = remember { mutableStateOf(false) }
+
+    Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.BottomCenter) {
+        Box(
+            modifier = Modifier
+                .fillMaxSize()
+                .background(Color.White),
+            contentAlignment = Alignment.TopCenter
+        ) {
+            Image(
+                painterResource(id = R.drawable.register_page),
+                contentDescription = "",
+            )
+        }
+
+        Column(
+            modifier = Modifier
+                .fillMaxWidth()
+                .fillMaxHeight(0.70f)
+                .background(whiteBackground)
+                .clip(RoundedCornerShape(30.dp)),
+            horizontalAlignment = Alignment.CenterHorizontally,
+            verticalArrangement = Arrangement.Center
+        ) {
+                Text(
+                    text = "Sign Up", fontSize = 30.sp,
+                    style = TextStyle(
+                        fontWeight = FontWeight.Bold,
+                        letterSpacing = 2.sp
+                    )
+                )
+                Spacer(modifier = Modifier.padding(20.dp))
+                Column(horizontalAlignment = Alignment.CenterHorizontally) {
+                    OutlinedTextField(
+                        value = nameValue.value,
+                        onValueChange = { nameValue.value = it },
+                        label = { Text(text = "Name") },
+                        placeholder = { Text(text = "Name") },
+                        singleLine = true,
+                        modifier = Modifier.fillMaxWidth(0.8f)
+                    )
+
+                    OutlinedTextField(
+                        value = emailValue.value,
+                        onValueChange = { emailValue.value = it },
+                        label = { Text(text = "Email Address") },
+                        placeholder = { Text(text = "Email Address") },
+                        singleLine = true,
+                        modifier = Modifier.fillMaxWidth(0.8f)
+                    )
+
+                    OutlinedTextField(
+                        value = phoneValue.value,
+                        onValueChange = { phoneValue.value = it },
+                        label = { Text(text = "Phone Number") },
+                        placeholder = { Text(text = "Phone Number") },
+                        singleLine = true,
+                        modifier = Modifier.fillMaxWidth(0.8f),
+                        keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Phone)
+                    )
+
+                    OutlinedTextField(
+                        value = passwordValue.value,
+                        onValueChange = { passwordValue.value = it },
+                        label = { Text(text = "Password") },
+                        placeholder = { Text(text = "Password") },
+                        singleLine = true,
+                        modifier = Modifier.fillMaxWidth(0.8f),
+                        trailingIcon = {
+                            IconButton(onClick = {
+                                passwordVisibility.value = !passwordVisibility.value
+                            }) {
+                                Icon(
+                                    imageVector = Icons.Rounded.Clear,
+                                    contentDescription = "Clear"
+//                                    imageVector = ImageVector.vectorResource(id = R.drawable.password_eye),
+//                                    tint = if (passwordVisibility.value) primaryColor else Color.Gray
+                                )
+                            }
+                        },
+                        visualTransformation = if (passwordVisibility.value) VisualTransformation.None
+                        else PasswordVisualTransformation()
+                    )
+
+                    OutlinedTextField(
+                        value = confirmPasswordValue.value,
+                        onValueChange = { confirmPasswordValue.value = it },
+                        label = { Text(text = "Confirm Password") },
+                        placeholder = { Text(text = "Confirm Password") },
+                        singleLine = true,
+                        modifier = Modifier.fillMaxWidth(0.8f),
+                        trailingIcon = {
+                            IconButton(onClick = {
+                                confirmPasswordVisibility.value = !confirmPasswordVisibility.value
+                            }) {
+                                Icon(
+                                    imageVector = Icons.Rounded.Clear,
+                                    contentDescription = "Clear"
+//                                    imageVector = ImageVector.vectorResource(id = R.drawable.password_eye),
+//                                    tint = if (confirmPasswordVisibility.value) primaryColor else Color.Gray
+                                )
+                            }
+                        },
+                        visualTransformation = if (confirmPasswordVisibility.value) VisualTransformation.None
+                        else PasswordVisualTransformation()
+                    )
+                    Spacer(modifier = Modifier.padding(10.dp))
+                    Button(onClick = { }, modifier = Modifier
+                        .fillMaxWidth(0.8f)
+                        .height(50.dp)) {
+                        Text(text = "Sign Up", fontSize = 20.sp)
+                    }
+                    Spacer(modifier = Modifier.padding(20.dp))
+                    Text(
+                        text = "Login Instead",
+                        modifier = Modifier.clickable(onClick = {
+                            navController.navigate("login_page"){
+                                launchSingleTop = true
+                            }
+                        })
+                    )
+                    Spacer(modifier = Modifier.padding(20.dp))
+                }
+        }
+    }
+}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Color.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Color.kt
new file mode 100644
index 0000000..a794c23
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Color.kt
@@ -0,0 +1,12 @@
+package com.learnandroid.loginapplication.ui.theme
+
+import androidx.compose.ui.graphics.Color
+
+val purple200 = Color(0xFFBB86FC)
+val purple500 = Color(0xFF6200EE)
+val purple700 = Color(0xFF3700B3)
+val teal200 = Color(0xFF03DAC5)
+
+val primaryColor = Color(0xFF00a9ea)
+val whiteBackground = Color(0xFFFFFFFF)
+//val whiteBackground = Color(0xFFF7F7F7)
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Shape.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Shape.kt
new file mode 100644
index 0000000..7e376e4
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Shape.kt
@@ -0,0 +1,11 @@
+package com.learnandroid.loginapplication.ui.theme
+
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material.Shapes
+import androidx.compose.ui.unit.dp
+
+val shapes = Shapes(
+        small = RoundedCornerShape(4.dp),
+        medium = RoundedCornerShape(4.dp),
+        large = RoundedCornerShape(0.dp)
+)
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Theme.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Theme.kt
new file mode 100644
index 0000000..8a4df0c
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Theme.kt
@@ -0,0 +1,44 @@
+package com.learnandroid.loginapplication.ui.theme
+
+import androidx.compose.foundation.isSystemInDarkTheme
+import androidx.compose.material.MaterialTheme
+import androidx.compose.material.darkColors
+import androidx.compose.material.lightColors
+import androidx.compose.runtime.Composable
+
+private val DarkColorPalette = darkColors(
+        primary = primaryColor,
+        primaryVariant = purple700,
+        secondary = teal200
+)
+
+private val LightColorPalette = lightColors(
+        primary = primaryColor,
+        primaryVariant = purple700,
+        secondary = teal200
+
+        /* Other default colors to override
+    background = Color.White,
+    surface = Color.White,
+    onPrimary = Color.White,
+    onSecondary = Color.Black,
+    onBackground = Color.Black,
+    onSurface = Color.Black,
+    */
+)
+
+@Composable
+fun LoginApplicationTheme(darkTheme: Boolean = isSystemInDarkTheme(), content: @Composable() () -> Unit) {
+    val colors = if (darkTheme) {
+        DarkColorPalette
+    } else {
+        LightColorPalette
+    }
+
+    MaterialTheme(
+            colors = colors,
+            typography = typography,
+            shapes = shapes,
+            content = content
+    )
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Type.kt b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Type.kt
new file mode 100644
index 0000000..b2be24c
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/java/com/learnandroid/loginapplication/ui/theme/Type.kt
@@ -0,0 +1,28 @@
+package com.learnandroid.loginapplication.ui.theme
+
+import androidx.compose.material.Typography
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.font.FontFamily
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.unit.sp
+
+// Set of Material typography styles to start with
+val typography = Typography(
+        body1 = TextStyle(
+                fontFamily = FontFamily.Default,
+                fontWeight = FontWeight.Normal,
+                fontSize = 16.sp
+        )
+        /* Other default text styles to override
+    button = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.W500,
+        fontSize = 14.sp
+    ),
+    caption = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Normal,
+        fontSize = 12.sp
+    )
+    */
+)
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/res/drawable-v24/ic_launcher_foreground.xml b/simple-login-ui-master/app/src/main/res/drawable-v24/ic_launcher_foreground.xml
new file mode 100644
index 0000000..2b068d1
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/drawable-v24/ic_launcher_foreground.xml
@@ -0,0 +1,30 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
+        <aapt:attr name="android:fillColor">
+            <gradient
+                android:endX="85.84757"
+                android:endY="92.4963"
+                android:startX="42.9492"
+                android:startY="49.59793"
+                android:type="linear">
+                <item
+                    android:color="#44000000"
+                    android:offset="0.0" />
+                <item
+                    android:color="#00000000"
+                    android:offset="1.0" />
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path
+        android:fillColor="#FFFFFF"
+        android:fillType="nonZero"
+        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
+        android:strokeWidth="1"
+        android:strokeColor="#00000000" />
+</vector>
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/res/drawable/ic_launcher_background.xml b/simple-login-ui-master/app/src/main/res/drawable/ic_launcher_background.xml
new file mode 100644
index 0000000..07d5da9
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/drawable/ic_launcher_background.xml
@@ -0,0 +1,170 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path
+        android:fillColor="#3DDC84"
+        android:pathData="M0,0h108v108h-108z" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M9,0L9,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,0L19,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,0L29,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,0L39,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,0L49,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,0L59,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,0L69,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,0L79,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M89,0L89,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M99,0L99,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,9L108,9"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,19L108,19"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,29L108,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,39L108,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,49L108,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,59L108,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,69L108,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,79L108,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,89L108,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,99L108,99"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,29L89,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,39L89,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,49L89,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,59L89,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,69L89,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,79L89,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,19L29,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,19L39,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,19L49,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,19L59,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,19L69,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,19L79,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+</vector>
diff --git a/simple-login-ui-master/app/src/main/res/drawable/login_image.jpg b/simple-login-ui-master/app/src/main/res/drawable/login_image.jpg
new file mode 100644
index 0000000..af6f97a
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/drawable/login_image.jpg differ
diff --git a/simple-login-ui-master/app/src/main/res/drawable/password_eye.xml b/simple-login-ui-master/app/src/main/res/drawable/password_eye.xml
new file mode 100644
index 0000000..a3e222a
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/drawable/password_eye.xml
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M12,4.5C7,4.5 2.73,7.61 1,12c1.73,4.39 6,7.5 11,7.5s9.27,-3.11 11,-7.5c-1.73,-4.39 -6,-7.5 -11,-7.5zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5zM12,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3 3,-1.34 3,-3 -1.34,-3 -3,-3z"/>
+</vector>
diff --git a/simple-login-ui-master/app/src/main/res/drawable/register_page.png b/simple-login-ui-master/app/src/main/res/drawable/register_page.png
new file mode 100644
index 0000000..41db231
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/drawable/register_page.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/simple-login-ui-master/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
new file mode 100644
index 0000000..eca70cf
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/simple-login-ui-master/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
new file mode 100644
index 0000000..eca70cf
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-hdpi/ic_launcher.png b/simple-login-ui-master/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000..a571e60
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/simple-login-ui-master/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 0000000..61da551
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-hdpi/ic_launcher_round.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-mdpi/ic_launcher.png b/simple-login-ui-master/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000..c41dd28
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/simple-login-ui-master/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 0000000..db5080a
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-mdpi/ic_launcher_round.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/simple-login-ui-master/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000..6dba46d
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/simple-login-ui-master/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..da31a87
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/simple-login-ui-master/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000..15ac681
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/simple-login-ui-master/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..b216f2d
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/simple-login-ui-master/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000..f25a419
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/simple-login-ui-master/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/simple-login-ui-master/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..e96783c
Binary files /dev/null and b/simple-login-ui-master/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ
diff --git a/simple-login-ui-master/app/src/main/res/values-night/themes.xml b/simple-login-ui-master/app/src/main/res/values-night/themes.xml
new file mode 100644
index 0000000..2073d19
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/values-night/themes.xml
@@ -0,0 +1,16 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <!-- Base application theme. -->
+    <style name="Theme.LoginApplication" parent="Theme.MaterialComponents.DayNight.NoActionBar">
+        <!-- Primary brand color. -->
+        <item name="colorPrimary">@color/purple_200</item>
+        <item name="colorPrimaryVariant">@color/purple_700</item>
+        <item name="colorOnPrimary">@color/black</item>
+        <!-- Secondary brand color. -->
+        <item name="colorSecondary">@color/teal_200</item>
+        <item name="colorSecondaryVariant">@color/teal_200</item>
+        <item name="colorOnSecondary">@color/black</item>
+        <!-- Status bar color. -->
+        <item name="android:statusBarColor" tools:targetApi="l">#FFFFFF</item>
+        <!-- Customize your theme here. -->
+    </style>
+</resources>
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/res/values/colors.xml b/simple-login-ui-master/app/src/main/res/values/colors.xml
new file mode 100644
index 0000000..f8c6127
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/values/colors.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="purple_200">#FFBB86FC</color>
+    <color name="purple_500">#FF6200EE</color>
+    <color name="purple_700">#FF3700B3</color>
+    <color name="teal_200">#FF03DAC5</color>
+    <color name="teal_700">#FF018786</color>
+    <color name="black">#FF000000</color>
+    <color name="white">#FFFFFFFF</color>
+</resources>
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/res/values/strings.xml b/simple-login-ui-master/app/src/main/res/values/strings.xml
new file mode 100644
index 0000000..edf7aeb
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">LoginApplication</string>
+</resources>
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/main/res/values/themes.xml b/simple-login-ui-master/app/src/main/res/values/themes.xml
new file mode 100644
index 0000000..83504cd
--- /dev/null
+++ b/simple-login-ui-master/app/src/main/res/values/themes.xml
@@ -0,0 +1,25 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <!-- Base application theme. -->
+    <style name="Theme.LoginApplication" parent="Theme.MaterialComponents.DayNight.NoActionBar">
+        <!-- Primary brand color. -->
+        <item name="colorPrimary">@color/purple_500</item>
+        <item name="colorPrimaryVariant">@color/purple_700</item>
+        <item name="colorOnPrimary">@color/white</item>
+        <!-- Secondary brand color. -->
+        <item name="colorSecondary">@color/teal_200</item>
+        <item name="colorSecondaryVariant">@color/teal_700</item>
+        <item name="colorOnSecondary">@color/black</item>
+        <!-- Status bar color. -->
+        <item name="android:statusBarColor" tools:targetApi="l">#FFFFFF</item>
+        <!-- Customize your theme here. -->
+    </style>
+
+    <style name="Theme.LoginApplication.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="Theme.LoginApplication.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="Theme.LoginApplication.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+</resources>
\ No newline at end of file
diff --git a/simple-login-ui-master/app/src/test/java/com/learnandroid/loginapplication/ExampleUnitTest.kt b/simple-login-ui-master/app/src/test/java/com/learnandroid/loginapplication/ExampleUnitTest.kt
new file mode 100644
index 0000000..9a33263
--- /dev/null
+++ b/simple-login-ui-master/app/src/test/java/com/learnandroid/loginapplication/ExampleUnitTest.kt
@@ -0,0 +1,17 @@
+package com.learnandroid.loginapplication
+
+import org.junit.Test
+
+import org.junit.Assert.*
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+class ExampleUnitTest {
+    @Test
+    fun addition_isCorrect() {
+        assertEquals(4, 2 + 2)
+    }
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/build.gradle b/simple-login-ui-master/build.gradle
new file mode 100644
index 0000000..860e12f
--- /dev/null
+++ b/simple-login-ui-master/build.gradle
@@ -0,0 +1,28 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+buildscript {
+    ext {
+        compose_version = '1.0.5'
+    }
+    repositories {
+        google()
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:7.2.1'
+        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10"
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+allprojects {
+    repositories {
+        google()
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
\ No newline at end of file
diff --git a/simple-login-ui-master/gradle.properties b/simple-login-ui-master/gradle.properties
new file mode 100644
index 0000000..2521752
--- /dev/null
+++ b/simple-login-ui-master/gradle.properties
@@ -0,0 +1,19 @@
+# Project-wide Gradle settings.
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
+# AndroidX package structure to make it clearer which packages are bundled with the
+# Android operating system, and which are packaged with your app"s APK
+# https://developer.android.com/topic/libraries/support-library/androidx-rn
+android.useAndroidX=true
+# Kotlin code style for this project: "official" or "obsolete":
+kotlin.code.style=official
\ No newline at end of file
diff --git a/simple-login-ui-master/gradle/wrapper/gradle-wrapper.jar b/simple-login-ui-master/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 0000000..f6b961f
Binary files /dev/null and b/simple-login-ui-master/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/simple-login-ui-master/gradle/wrapper/gradle-wrapper.properties b/simple-login-ui-master/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
index 0000000..e3b58ee
--- /dev/null
+++ b/simple-login-ui-master/gradle/wrapper/gradle-wrapper.properties
@@ -0,0 +1,6 @@
+#Thu Jan 21 11:04:06 IST 2021
+distributionBase=GRADLE_USER_HOME
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.3.3-bin.zip
+distributionPath=wrapper/dists
+zipStorePath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
diff --git a/simple-login-ui-master/gradlew b/simple-login-ui-master/gradlew
new file mode 100644
index 0000000..cccdd3d
--- /dev/null
+++ b/simple-login-ui-master/gradlew
@@ -0,0 +1,172 @@
+#!/usr/bin/env sh
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn () {
+    echo "$*"
+}
+
+die () {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+nonstop=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
+esac
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
+}
+APP_ARGS=$(save "$@")
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
+if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
+  cd "$(dirname "$0")"
+fi
+
+exec "$JAVACMD" "$@"
diff --git a/simple-login-ui-master/gradlew.bat b/simple-login-ui-master/gradlew.bat
new file mode 100644
index 0000000..f955316
--- /dev/null
+++ b/simple-login-ui-master/gradlew.bat
@@ -0,0 +1,84 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windows variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/simple-login-ui-master/screenshots/login.jpg b/simple-login-ui-master/screenshots/login.jpg
new file mode 100644
index 0000000..361ab4b
Binary files /dev/null and b/simple-login-ui-master/screenshots/login.jpg differ
diff --git a/simple-login-ui-master/screenshots/register.jpg b/simple-login-ui-master/screenshots/register.jpg
new file mode 100644
index 0000000..47850db
Binary files /dev/null and b/simple-login-ui-master/screenshots/register.jpg differ
diff --git a/simple-login-ui-master/settings.gradle b/simple-login-ui-master/settings.gradle
new file mode 100644
index 0000000..142b77e
--- /dev/null
+++ b/simple-login-ui-master/settings.gradle
@@ -0,0 +1,2 @@
+rootProject.name = "LoginApplication"
+include ':app'
